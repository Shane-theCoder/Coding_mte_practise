Sol 9
Algorithm
By Vertical Scanning
1. Take the first string (strs[0]) as the initial prefix.
2. Compare characters column-wise.
3. If the prefix becomes empty at any point, return "".
4. Time Complexity: O(S).
5. Space Complexity: O(1).

class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs == null || strs.length == 0){
            return "";
        }
        String prefix = strs[0];

        for(int i=1; i<strs.length; i++){
            int j=0;
            while(j<prefix.length() && j<strs[i].length() && prefix.charAt(j) == strs[i].charAt(j)){
                j++;
            }
            prefix = prefix.substring(0,j);

            if(prefix.length() == 0){
                return "";
            }
        }
        return prefix;
    }
}

Input: strs = ["flower","flow","flight"]
Output: "fl"
